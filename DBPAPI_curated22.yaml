openapi: 3.0.1
info:
  title: Daily Banking Product API
  version: 1.0.36
  description: >-
    This API provides the basic functions needed in the offering discovery process, such as search product offering, retrieve information about specific product offering or parts of it
  contact:
    name: Daily Banking Catalog One Administration
    email: amdocs@nl.abnamro.com
  x-apiType: "enterprise"
servers:
  - url: 'https://aziag-tst.nl.eu.abnamro.com/daily-banking/products/v1'
    description: ST Environment
  - url: 'https://aziag-acc.nl.eu.abnamro.com/daily-banking/products/v1'
    description: ET Environment
  - url: 'https://aziag-prd.nl.eu.abnamro.com/daily-banking/products/v1'
    description: PR Environment
paths:
  /:
    get:
      tags:
        - product-offering
      operationId: getDailyBankingProductList
      summary: retrieves commercial product offerings based on the search criteria
      description: |
        The operation returns all commercial product offerings that match the given criteria in the input regardless of qualification rules (but qualification can be expressed as a search criterion). For localized information, the operation returns only the entries matching the 'Accept-Language' header or the default language if none is specified or no match is found.\
          Filtering parameters are connected with logical _AND_ while filtering values are combined with the _OR_ operation. Example:
          
          - (businessLine is RETAIL _OR_ MEES_PIERSON) _AND_ (productCategory is CASH _OR_ SAVINGS)
      parameters:
        - name: Subject-Token-Type
          in: header
          description: specifies the authorisation mechanism; copy paste here the description from the type definition
          schema: 
            type: string
            enum:
              - MSEC
              - ENTERPRISE_TOKEN
          example: MSEC
        - name: Subject-Token
          in: header
          description: the consumer application
          schema: 
            $ref: '#/components/headers/Subject-Token'
        - name: Consumer-Id
          in: header
          description: the consumer application
          schema:
            $ref: '#/components/headers/Consumer-Id'
        - name: Trace-Id
          in: header
          description: the id of the request in the consumer application
          schema:
            $ref: '#/components/headers/Trace-Id'
        - name: Accept-Language
          in: header
          description: the language preffered by consumer application for the localized content
          schema:
            $ref: '#/components/headers/Accept-Language'
        - name: businessLine
          in: query
          description: |
            Parameter that allows filtering of results based on the business vertical that provides/manages the product
          schema:
            $ref: '#/components/schemas/BusinessLine'
          style: form
          explode: false
          example: RETAIL
        - name: productCategory
          in: query
          description: |
            Parameter allowing filtering based on the product category
          schema:
            $ref: '#/components/schemas/ProductCategory'
          style: form
          explode: false
          example: SAVINGS
        - name: productSubCategory
          in: query
          description: |-
            fine grain filtering of products based on the sub-category; the actual set of values depends on the product line \
              For SAVINGS category, the relevant sub-categories would be: \
                  - COMMERCIAL_CUSTOMIZED_SAVINGS_ACCOUNTS \
                  - COMMERCIAL_STANDARD_SAVINGS_ACCOUNTS \
                  - INVESTMENT_SAVING_ACCOUNTS \
                  - STANDARD_SAVINGS_ACCOUNTS \
                  - CHILDRENS_SAVINGS_ACCOUNTS \
                  - CUSTOMIZED_SAVINGS_ACCOUNTS \
                  - INTERNATIONAL_STANDARD_SAVINGS_ACCOUNTS
          schema:
            $ref: '#/components/schemas/ProductSubCategory'
          style: form
          explode: false
          example: INVESTMENT_SAVING_ACCOUNTS
        - name: productsGroup
          in: query
          description: |-
            Allow filtering of products through logical grouping.
          schema:
            $ref: '#/components/schemas/ProductGroup'
          style: form
          explode: false
          example: ADVISORY_OTHER
        - name: country
          in: query
          description: >-
            three letters country code of the country where the product is sold, in ISO 3166 format. A special country code 'SEP' is used for aggregating the SEPA member countries.
          schema:
            type: string
            pattern: '[A-Z]{3}'
          style: form
          explode: false
          example: NL
        - name: "customerId"
          description: >-
            non-mandatory parameter; if known then the result will be filtered to match only product offering for which the given customer is eligible
          schema:
            type: string
          in: query
          example: 002468097531
      responses:
        200:
          description: Full set of product offering terms and conditions
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsList'
        400:
          description: parameter incorrect.
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCustomError'
        401:
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
          description: |
            "Authorization Error"

            Detailed Error List: 
            ---
            - SUBJECT_TOKEN_INVALID
              > Valid subject-token is required.
            - SUBJECT_TOKEN_MISSING
              > The Subject-Token header is required.
            - SUBJECT_TOKEN_TYPE_INVALID
              > The Subject-Token-Type header should be 'MSEC'.
            - SUBJECT_TOKEN_TYPE_MISSING
              > The Subject-Token-Type header is required.
          content: 
            "application/json":
              schema:
                $ref: '#/components/schemas/ApplicationCustomError'
              example:
                  {
                   errors: [
                             {
                              "code": "SUBJECT_TOKEN_MISSING",
                              "message": "The Subject Token header is required.",
                              "traceId": "924bd142-6514-445c-9e01-486820d94263",
                              "status": 401
                             }
                           ]
                  }
        403:
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
          description: |
            "Access Forbidden"

            Detailed Error List: 
            ---
            - SUBJECT_NOT_ALLOWED
              > The Subject (End User) is not allowed to use the specific operation.
          content: 
            "application/json":
              schema:
                $ref: "#/components/schemas/ApplicationCustomError"
              example:
                  {
                   errors: [
                             {
                              "code": "SUBJECT_NOT_ALLOWED",
                              "message": "The Subject (End User) is not allowed to use the specific operation.",
                              "traceId": "6be9522f-ff5f-4932-8243-66c154880a1a",
                              "status": 403
                             }
                           ]
                  }
        406:
          description: |
            not acceptable. this will not be implemented as the service will always return the Dutch version in case the language requested is not understood or cannot be served
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCustomError'
        500:
          description: >-
            An unexpected error has occurred. The error has been logged and is
            being investigated.
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCustomError'
  /{productId}:
    parameters:
      - name: Subject-Token-Type
        in: header
        description: specifies the authorisation mechanism
        schema:
          type: string
          enum:
            - MSEC
            - ENTERPRISE_TOKEN
        example: MSEC
      - name: Subject-Token
        in: header
        description: the consumer's security token
        schema: 
          $ref: '#/components/headers/Subject-Token'
      - name: Consumer-Id
        in: header
        description: the consumer application
        schema:
          $ref: '#/components/headers/Consumer-Id'
      - name: Trace-Id
        in: header
        description: the consumer application
        schema:
          $ref: '#/components/headers/Trace-Id'
      - name: Accept-Language
        in: header
        description: the consumer application
        schema:
          $ref: '#/components/headers/Accept-Language'
      - $ref: '#/components/parameters/ProductId'
    get:
      tags:
        - product-offering
      summary: provides commercial information about product offering
      description: >-
        This operation exposes commercial information and configuration parameters about a product offering. The information is used to be provided to the  customers in product browsing and order capture processes.
      operationId: getDailyBankingProduct
      responses:
        200:
          description: Full set of product offering terms and conditions
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCommercialInfo'
        401:
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
          description: |
            "Authorization Error"

            Detailed Error List: 
            ---
            - SUBJECT_TOKEN_INVALID
              > Valid subject-token is required.
            - SUBJECT_TOKEN_MISSING
              > The Subject-Token header is required.
            - SUBJECT_TOKEN_TYPE_INVALID
              > The Subject-Token-Type header should be 'MSEC'.
            - SUBJECT_TOKEN_TYPE_MISSING
              > The Subject-Token-Type header is required.
          content: 
            "application/json":
              schema:
                $ref: '#/components/schemas/ApplicationCustomError'
              example:
                  {
                   errors: [
                             {
                              "code": "SUBJECT_TOKEN_MISSING",
                              "message": "The Subject Token header is required.",
                              "traceId": "924bd142-6514-445c-9e01-486820d94263",
                              "status": 401
                             }
                           ]
                  }
        403:
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
          description: |
            "Access Forbidden"

            Detailed Error List: 
            ---
            - SUBJECT_NOT_ALLOWED
              > The Subject (End User) is not allowed to use the specific operation.
          content: 
            "application/json":
              schema:
                $ref: "#/components/schemas/ApplicationCustomError"
              example:
                  {
                   errors: [
                             {
                              "code": "SUBJECT_NOT_ALLOWED",
                              "message": "The Subject (End User) is not allowed to use the specific operation.",
                              "traceId": "6be9522f-ff5f-4932-8243-66c154880a1a",
                              "status": 403
                             }
                           ]
                  }
        404:
          description: |
            The requested offering was not found in our system.
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCustomError'
        406:
          description: |
            not acceptable. this will not be implemented as the service will always return the Dutch version in case the language requested is not understood or cannot be served
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCustomError'
        500:
          description: >-
            An unexpected error has occurred. The error has been logged and is
            being investigated.
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCustomError'
  /{productId}/fulfillment:
    parameters:
      - name: Subject-Token-Type
        in: header
        description: specifies the authorisation mechanism
        schema: 
          type: string
          enum:
            - MSEC
            - ENTERPRISE_TOKEN
        example: MSEC
      - name: Subject-Token
        in: header
        description: the consumer's security token
        schema: 
          $ref: '#/components/headers/Subject-Token'
      - name: Consumer-Id
        in: header
        description: the consumer application
        schema:
          $ref: '#/components/headers/Consumer-Id'
      - name: Trace-Id
        in: header
        description: the consumer application
        schema:
          $ref: '#/components/headers/Trace-Id'
      - $ref: '#/components/parameters/ProductId'
    get:
      tags:
        - product-offering
      summary: provides fulfillment information to order management systems
      description: >-
        provides the order management system with the structure of attributes needed for fulfilment process per product engine
      operationId: getDailyBankingProductFulfillment
      responses:
        200:
          description: Full set of fulfilment needed attributes split per backend adminstration (product engine)
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFulfillmentParameters'
        401:
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
          description: |
            "Authorization Error"

            Detailed Error List: 
            ---
            - SUBJECT_TOKEN_INVALID
              > Valid subject-token is required.
            - SUBJECT_TOKEN_MISSING
              > The Subject-Token header is required.
            - SUBJECT_TOKEN_TYPE_INVALID
              > The Subject-Token-Type header should be 'MSEC'.
            - SUBJECT_TOKEN_TYPE_MISSING
              > The Subject-Token-Type header is required.
          content: 
            "application/json":
              schema:
                $ref: '#/components/schemas/ApplicationCustomError'
              example:
                  {
                   errors: [
                             {
                              "code": "SUBJECT_TOKEN_MISSING",
                              "message": "The Subject Token header is required.",
                              "traceId": "924bd142-6514-445c-9e01-486820d94263",
                              "status": 401
                             }
                           ]
                  }
        403:
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
          description: |
            "Access Forbidden"

            Detailed Error List: 
            ---
            - SUBJECT_NOT_ALLOWED
              > The Subject (End User) is not allowed to use the specific operation.
          content: 
            "application/json":
              schema:
                $ref: "#/components/schemas/ApplicationCustomError"
              example:
                  {
                   errors: [
                             {
                              "code": "SUBJECT_NOT_ALLOWED",
                              "message": "The Subject (End User) is not allowed to use the specific operation.",
                              "traceId": "6be9522f-ff5f-4932-8243-66c154880a1a",
                              "status": 403
                             }
                           ]
                  }
        404:
          description: The requested offering was not found in our system.
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCustomError'
        500:
          description: >-
            An unexpected error has occurred. The error has been logged and is
            being investigated.
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCustomError'
  /{productId}/eligibility-check:
    parameters:
      - name: Subject-Token-Type
        in: header
        description: specifies the authorisation mechanism
        schema: 
          type: string
          enum:
            - MSEC
            - ENTERPRISE_TOKEN
        example: MSEC
      - name: Subject-Token
        in: header
        description: the consumer's security token
        schema: 
          $ref: '#/components/headers/Subject-Token'
      - name: Consumer-Id
        in: header
        description: the consumer application
        schema:
          $ref: '#/components/headers/Consumer-Id'
      - name: Trace-Id
        in: header
        description: the consumer application
        schema:
          $ref: '#/components/headers/Trace-Id'
      - $ref: '#/components/parameters/ProductId'
    post:
      tags: 
        - product-offering
      summary: verifies if customer qualifies for the given product
      operationId: checkDailyBankingProductEligibility
      description: >-
        the operation performs a deep eligibility check, including the qualification rules involving operational data, such as the presence of a current account or limitations regarding the number of savings products.
      requestBody:
        description: "the customer identification"
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/Customer"
            example: 
              identificationType: BC_ID
              id: 0002468097531
                     
      responses:
        204:
          description: "customer is eligible for yet another instance of the requested product; no further content is provided"
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
        400:
          description: >-
            not eligible
            returned in one of the situations below; please check the error message for details: 
              * the customer is not eligible for (yet another instance of) the requested offering 
              * the customer cannot be found in the operational data 
              * the customer parameters are insufficient for assessing the eligibility 
              * some of the downstream systems do not respond and the eligibility cannot be assessed w/o the related data
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCustomError'
        401:
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
          description: |
            "Authorization Error"

            Detailed Error List: 
            ---
            - SUBJECT_TOKEN_INVALID
              > Valid subject-token is required.
            - SUBJECT_TOKEN_MISSING
              > The Subject-Token header is required.
            - SUBJECT_TOKEN_TYPE_INVALID
              > The Subject-Token-Type header should be 'MSEC'.
            - SUBJECT_TOKEN_TYPE_MISSING
              > The Subject-Token-Type header is required.
          content: 
            "application/json":
              schema:
                $ref: '#/components/schemas/ApplicationCustomError'
              example:
                  {
                   errors: [
                             {
                              "code": "SUBJECT_TOKEN_MISSING",
                              "message": "The Subject Token header is required.",
                              "traceId": "924bd142-6514-445c-9e01-486820d94263",
                              "status": 401
                             }
                           ]
                  }
        403:
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
          description: |
            "Access Forbidden"

            Detailed Error List: 
            ---
            - SUBJECT_NOT_ALLOWED
              > The Subject (End User) is not allowed to use the specific operation.
          content: 
            "application/json":
              schema:
                $ref: "#/components/schemas/ApplicationCustomError"
              example:
                  {
                   errors: [
                             {
                              "code": "SUBJECT_NOT_ALLOWED",
                              "message": "The Subject (End User) is not allowed to use the specific operation.",
                              "traceId": "6be9522f-ff5f-4932-8243-66c154880a1a",
                              "status": 403
                             }
                           ]
                  }
        404:
          description: The requested offering was not found in our system.
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCustomError'
        500:
          description: >-
            An unexpected error has occurred. The error has been logged and is
            being investigated.
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCustomError'
  /{productId}/configuration-validation:
    parameters:
      - name: Subject-Token-Type
        in: header
        description: specifies the authorisation mechanism
        schema: 
          type: string
          enum:
            - MSEC
            - ENTERPRISE_TOKEN
        example: MSEC
      - name: Subject-Token
        in: header
        description: the consumer's security token
        schema: 
          $ref: '#/components/headers/Subject-Token'
      - name: Consumer-Id
        in: header
        description: the consumer application
        schema:
          $ref: '#/components/headers/Consumer-Id'
      - name: Trace-Id
        in: header
        description: the consumer application
        schema:
          $ref: '#/components/headers/Trace-Id'
      - $ref: '#/components/parameters/ProductId'
    post:
      tags: 
        - product-offering
      summary: validates the configuration values given for the product
      description: validates the configuration values given for the product
      operationId: validateDailyBankingProductConfiguration
      requestBody:
        description: |
          the customer chosen configuration\
            ##### be advised that in the example the itemId intentionally start with the particle found in "parentItemId" while in practice does not have to be this way
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/ConfigurationValues"
            example: 
              - itemId: card.colour
                itemValue: GREEN
                parentItemId: card
              - itemId: card.name_on_card
                parentItemId: card
                itemValue: Her. NoSQL Allowed
      responses:
        204:
          description: "customer chosen configuration is valid; no further content is provided"
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
        400:
          description: >-
            not eligible; please check the error message for details. \
            
            returned in one of the situations below: 
              * the customer is not eligible for (yet another instance of) the requested offering 
              * the customer cannot be found in operational data 
              * the customer parameters are insufficient for assessing the eligibility 
              * some of the downstream systems do not respond and the eligibility cannot be assessed w/o the related data
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCustomError'
        401:
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
          description: |
            "Authorization Error"

            Detailed Error List: 
            ---
            - SUBJECT_TOKEN_INVALID
              > Valid subject-token is required.
            - SUBJECT_TOKEN_MISSING
              > The Subject-Token header is required.
            - SUBJECT_TOKEN_TYPE_INVALID
              > The Subject-Token-Type header should be 'MSEC'.
            - SUBJECT_TOKEN_TYPE_MISSING
              > The Subject-Token-Type header is required.
          content: 
            "application/json":
              schema:
                $ref: '#/components/schemas/ApplicationCustomError'
              example:
                  {
                   errors: [
                             {
                              "code": "SUBJECT_TOKEN_MISSING",
                              "message": "The Subject Token header is required.",
                              "traceId": "924bd142-6514-445c-9e01-486820d94263",
                              "status": 401
                             }
                           ]
                  }
        403:
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
          description: |
            "Access Forbidden"

            Detailed Error List: 
            ---
            - SUBJECT_NOT_ALLOWED
              > The Subject (End User) is not allowed to use the specific operation.
          content: 
            "application/json":
              schema:
                $ref: "#/components/schemas/ApplicationCustomError"
              example:
                  {
                   errors: [
                             {
                              "code": "SUBJECT_NOT_ALLOWED",
                              "message": "The Subject (End User) is not allowed to use the specific operation.",
                              "traceId": "6be9522f-ff5f-4932-8243-66c154880a1a",
                              "status": 403
                             }
                           ]
                  }
        404:
          description: The requested offering was not found in our system.
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCustomError'
        500:
          description: >-
            An unexpected error has occurred. The error has been logged and is
            being investigated.
          headers:
            Trace-Id:
              $ref: '#/components/headers/Trace-Id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCustomError'
components:
  responses:
    ServerErrors:
      description: |
        "Server made a Boo-Boo!"

        Detailed Error List:
        ---
        - INTERNAL_SERVER_ERROR
          > Internal server error occurred
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApplicationCustomError'
          example:
            {
              errors: [
              {
                "code": "INTERNAL_SERVER_ERROR",
                "message": "Internal server error occurred",
                "traceId": "XX1234",
                "status": 500
              }
              ]
            }
  headers:
    Subject-Token:
      description: the consumer security token
      required: false
      schema: 
        type: string
      example: "VGhpcyBpcyBhIG5pY2UgdGV4dCBlbmNvZGVkIGluIEJhc2U2NA=="
    Consumer-Id:
      description: "Unique value for consumer application calling the API "
      required: false
      schema:
        type: string
        example: "DCPB"
    Trace-Id:
      description: "Unique end-2-end trace id received from the consumer"
      required: false
      schema:
        type: string
        example: "16258284-86af-4d65-8cc9-6b4a471f0207"
    Accept-Language:
      description: |-
        the list o languages accepted by the consumer; is strongly recommended, otherwise, the default language decided by the backend is provided. If the content is not found in the requested language/s then the content in the 'nl' language is returned for that object(!)
      schema:
        type: string
        example: 'en'
  parameters:
    ProductId:
      name: "productId"
      in: "path"
      required: true
      description: |
        the identifier of the product offering for which the sales context is requested
      schema:
        type: string
        example: '001294'
  schemas:
    Customer:
      type: object
      oneOf:
        - $ref: "#/components/schemas/CustomerIdentification"
        - $ref: "#/components/schemas/CustomerCharacteristics"
    CustomerIdentification:
      type: object
      description: |
        customer BC ID or party id
      required: 
        - "id"
      properties:
        identificationType:
          description: |- 
            the type of customer identifier. this refers to the customer's representation identifier within the financial institution's registry, not to the civil or social identification
          type: string
          default: BC_ID
          example: BC_ID
          enum: 
            - PARTY_ID
            - BC_ID
            - EXTERNAL
        id:
          description: >-
            customer's representation identifier within the financial institution's registry
          type: string
          example: 000123456789
      example: 
        identificationType: BC_ID
        id: 0002468097531
    CustomerCharacteristics:
      type: object
      description: |-
        an avatar that holds all the attributes needed for assessing the eligibility of a customer \
          be advised that there is no operational data attached to the avatar so only the session data can be used
      required: 
        - "relationCategory"
      properties:
        relationCategory:
          type: string
          pattern: '\d{2}'
          description: zero left padded relation category
          example: "14"
        clientGroupCode:
          type: string
          pattern: '\d{4}'
          description: |
            zero left padded client group code
          example: "0456"
        age:
          type: integer
          description: |
            the age of the (avatar) customer in years
          example: 108
        customerLifeCycleStatus:
          description: |-
            the status of the customer is mapped to the known registration status codes in BCDB (e.g. a customer having an account with AAB is in registration status 4)
               - ACTIVE = the customer is known to the bank and it has active agreeemnt/s
               - PROSPECTIVE = the customer did not pass through the onboarding process but shows interest to purchase financial services/products
               - SUSPENDED = the customer does not have active agreements with the bank but did not express the wish to terminate business with the financial institution
               - TERMINATED = the customer does not have an active agreement with the financial institution and there is no wish for the collaboration to continue.
          type: string
          default: ACTIVE
          example: ACTIVE
          enum: 
            - ACTIVE
            - PROSPECTIVE
            - SUSPENDED
            - TERMINATED
        financialRiskScore:
          description: |
            the financial risk assessment score; a.k.a KYCScore
          type: integer
          example: 48
        financialRiskReassessmentDate:
          description: |
            when the financial risk will be reassessed. a.k.a. KYC Reassessment Date
          type: string
          format: date
          example: "2019-12-11"
        debtorStatus:
          description: |-
            shows if the customer has unpaid debts over to the financial institution and if so, which is the collection status. a.k.a. "Flanderijn status"
              - N_A = the customer has no known debts to the financial institution
              - POINT_OF_NO_RETURN = the customer has old debts with the financial institution and the institution intends to initiate legal collection of the debts
              - FLAGGED = the customer has recent debts with the financial institution and the institution intends to amiably pursue debt collection
          type: string
          enum:
            - N_A
            - POINT_OF_NO_RETURN
            - FLAGGED
    ApplicationCustomError:
      type: object
      required: 
        - "errors"
      properties:
        errors:
          type: array
          minItems: 1 
          maxItems: 5
          description: |
            List of application errors.
          items:
            $ref: '#/components/schemas/ErrorItem'
    ErrorItem:
      type: object
      required:
         - "code"
         - "message"
         - "status"
      properties:
        status:
          type: integer
          description: |
            unique status code identifying the type of issue. Can be filled with the HTTP status code, for example.
        code:
          type: string
          description: |
            Application internal error code.
        traceId:
          type: string
          description: |
            Application internal error trace Id.
        message:
          type: string
          description: |
            Error message, descriptive for the investigating party. For example, for consumer error, it should hint where the request could change to get a successful response.
      description: List of application errors.
    ProductsList:
      type: object
      required: 
        - "products"
      properties:
        products:
          type: array
          minItems: 0
          maxItems: 2000
          items:
            $ref: '#/components/schemas/ProductBrief'
    ProductBrief:
      description: |
        a 360 view of the product offering
      type: object
      required: 
        - "productId"
      properties:
        productId:
          type: string
          description: unique id of the offering
          example: "0293853491938"
        productName:
          type: string
          description: |
            localized name of the offering; could be used in front-end
          example: "Future Savings"
        productShortDescription:
          type: string
          description: |
            localized description/short briefing of the offering; could be used in front-end
          example: "Just a place where to keep your money until your kid starts college"
        productDocumentationURL:
          description:  |
            the location of an electronic document (web page, pdf, etc) containing a detailed description of the product offering and/or its terms and conditions
          type: string
          pattern: "url"
          example: 'https://developer-pr-iag.nl.eu.abnamro.com/rest-standards-and-guidelines/yaml-guidelines/#151'
    BusinessLine:
      type: string
      description: |
        Organisation unit that has the special purpose to service and support a specific customer segment or function. A product offering characteristic differentiating based on the business vertical.
      enum:
        - RETAIL
        - MEES_PIERSON
        - SMALL_AND_MEDIUM_ENTERPRISES
        - LARGE_CORPORATES
        - INTERNATIONAL_BANKING
    ProductCategory:
      description: |
        Classification that distinguishes between different categories of financial products according to their characteristics.
      type: string
      example: SAVINGS
      enum:
        - APPLICATION_AND_APIS
        - BUNDLES
        - CASH
        - CLEARING
        - CREDITS
        - FINANCIAL_ADVICE
        - INSURANCES
        - INVESTMENTS
        - MARKETS
        - MORTGAGES
        - NON_FINANCIAL_SERVICES
        - PAYMENTS
        - PENSIONS
        - SAVINGS
        - TRADE_FINANCE
    ProductSubCategory:
      description: |
        the next level in the product tree that contains a breakdown of the highest level of enterprise-wide recognizable products that will be recognised at a statutory and regulatory reporting level.
      type: string
      enum: 
        - ADVICE_SERVICES
        - ADVISORY
        - APIS
        - BANKING_AS_A_SERVICE
        - BUILD_UP_PENSION
        - BUNDLES
        - CASH_POOLING
        - CASH_SOLUTIONS
        - COLLATERAL_ACCOUNTS
        - CONTINGENT_LIABILITIES
        - CORPORATE_LENDING
        - CREDIT_CARDS
        - CURRENT_ACCOUNT_CREDITS
        - CUSTOMISED_CONSUMER_LOANS
        - DEBT_CAPITAL_MARKETS
        - DEPOSIT_ACCOUNTS
        - DISCRETIONARY_PORTFOLIO_MANAGEMENT
        - DOCUMENTARY_COLLECTION
        - ELECTONIC_IDENTIFICATION
        - ELECTRONIC_CHANNELS
        - EQUITY_CAPITAL_MARKETS
        - EQUITY_PRODUCTS
        - EXECUTION_ONLY
        - EXECUTION_SERVICES
        - EXTERNAL_MANAGEMENT
        - FINANCIAL_OVERVIEWS
        - FINANCING_SERVICES
        - FIXED_INCOME_PRODUCTS
        - FIXED_TERM_DEPOSITS
        - FUNDING_PRODUCTS
        - GUARANTEES
        - INVESTMENT_ACCOUNTS
        - LEASE
        - LETTER_OF_CREDIT
        - LIFE_INSURANCES
        - MERGERS_AND_ACQUISITION_ADVISORY
        - MORTGAGE_LOANS
        - MORTGAGE_SERVICES
        - MORTGAGES_NWE
        - NON_LIFE_INSURANCES
        - OFF_BALANCE_SHEET_INSTRUMENTS
        - OPEN_CHANNELS
        - OVERDRAFT_FACILITY_ACCOUNTS
        - PAYMENT_ACCOUNTS
        - PAYMENT_ACQUIRING
        - PAYMENT_CARDS
        - PAYMENT_SERVICES
        - PAYMENT_TYPE
        - PAY_OUT_PENSION
        - PORTFOLIO_ADVANCE_RATE
        - REAL_ESTATE
        - REAL_ESTATE_LOANS
        - REIMBURSEMENTS
        - RISK_MANAGEMENT_PRODUCTS
        - SAVINGS_ACCOUNTS
        - SAVINGS_SERVICES
        - SETTLEMENT_AND_ASSET_SERVICES
        - SOLUTION_SERVICES
        - STANDARDISED_CONSUMER_LOANS
        - SUPPLIER_CREDITS
        - TIKKIE
        - WEALTH_SOLUTIONS      
    ProductGroup:
      description:  |
        Products connected based on their characteristics and the market needs they address. Collection of products that together form one logical group. One product can be part of multiple logical groups
      type: string
      enum:
        - ACCEPTGIRO
        - ACCESS_DIRECT
        - ACCESS_ONLINE
        - ACCIDENT_INSURANCES
        - ACCOUNTS_APIS
        - ACTIVE_ADVICE
        - ADMINISTRATIVE_SOLUTIONS
        - ADVANCE_ON_EXPORT_SHIPMENT_DOCUMENTS
        - ADVANCE_PAYMENT_ON_COMMITTED_DRAFTS
        - ADVISORY
        - ADVISORY_OTHER
        - ANNUAL_TRAVEL_INSURANCES
        - ANNUITY_REDUCTION
        - BANK_GUARANTEE
        - BRIDGING_LOANS
        - BUNDLES
        - BUY_SIDE
        - CAR_INSURANCES
        - CARD_WITH_INSTALLMENT_FACILITY
        - CASH_FINANCING
        - CASH_TRADING_ACCOUNT
        - CASH_TRANSACTIONS
        - CHEQUES
        - CHILDREN_PAYMENT_ACCOUNTS
        - CHILDRENS_SAVINGS_ACCOUNTS
        - COMFORT_ADVICE
        - COMMERCIAL_CREDIT_CARDS
        - COMMERCIAL_CREDITS
        - COMMERCIAL_CUSTOMIZED_ACCOUNTS
        - COMMERCIAL_CUSTOMIZED_DEPOSIT_ACCOUNTS
        - COMMERCIAL_CUSTOMIZED_SAVINGS_ACCOUNTS
        - COMMERCIAL_DEBIT_CARDS
        - COMMERCIAL_REAL_ESTATE_LOANS
        - COMMERCIAL_STANDARD_ACCOUNTS
        - COMMERCIAL_STANDARD_DEPOSIT_ACCOUNTS
        - COMMERCIAL_STANDARD_SAVINGS_ACCOUNTS
        - COMMODITIES
        - COMMODITY_BROKERAGE
        - CONSUMER_CREDIT_CARDS
        - CONSUMER_CUSTOMIZED_PAYMENT_ACCOUNTS
        - CONSUMER_DEBIT_CARDS
        - CONSUMER_PREPAID_CARDS
        - CONSUMER_STANDARD_PAYMENT_ACCOUNTS
        - CONTINGENT_LIABILITIES
        - CORPORATE_ACTIONS
        - CORPORATE_BROKING
        - CORPORATE_REAL_ESTATE_LOANS
        - CREDIT_BROKERAGE
        - CREDIT_COOPERATION_PROGRAMMES
        - CREDIT_FACILITY
        - CREDITS_NEXT_TO_THE_ACCOUNT_NON_REVOLVING
        - CREDITS_NEXT_TO_THE_ACCOUNT_REVOLVING
        - CREDITS_ON_THE_ACCOUNT
        - CROSS_BORDER
        - CUSTODY
        - CUSTOMIZED_ADVICE
        - CUSTOMIZED_CASH_POOLING
        - CUSTOMIZED_PAYMENT_ACCOUNTS
        - CUSTOMIZED_PRICING_CONTRACTS
        - CUSTOMIZED_SAVINGS_ACCOUNTS
        - DEBIT_CARD_ACQUIRING
        - DEBT_CAPITAL_MARKETS_LOANS
        - DEPOSITS
        - DEPOSITS_AND_WITHDRAWALS
        - DERIVATIVES_CLEARING
        - DIRECT_REAL_ESTATE
        - DISABILITY_INSURANCES
        - DISCRETIONARY_PORTFOLIO_MANAGEMENT
        - DOMESTIC
        - DOMESTIC_DIRECT_DEBIT
        - DPM_CLASSIC_MANDATES
        - DPM_COIN_MANDATES
        - DPM_ETF_MANDATES
        - DPM_IMPACT_MANDATES
        - DPM_MULTI_MANAGER_MANDATES
        - DPM_PEA_MANDATES
        - DPM_SPECIAL_MANDATES
        - DPM_SUSTAINABLE_MANDATES
        - EBICS
        - ENDOWMENT_INSURANCE_ANNUITY
        - ENDOWMENT_INSURANCES
        - EQUIPMENT_LEASE
        - EQUIPMENT_LOANS
        - EQUITIES
        - EQUITY_CAPITAL_MARKETS
        - ESTATE_PLANNING
        - EXCHANGE
        - EXECUTION_ONLY
        - EXIT_PORTFOLIO
        - EXPORT_COLLECTION
        - EXPORT_LETTER_OF_CREDIT
        - EXTERNAL_ASSET_MANAGEMENT
        - EXTERNAL_MANAGEMENT
        - EXTRADEAL
        - FIXED_INCOME
        - FIXPLUS
        - FOREIGN_CURRENCY_CURRENT_ACCOUNTS
        - FOREIGN_EXCHANGE
        - FUND_ADVICE
        - FUNERAL_INSURANCES
        - GENERAL_LENINGVOORWAARDEN
        - GLOBAL_CASH_CLEARING
        - GLOBAL_EXECUTION_SERVICES
        - GREEN_FIXED_TERM_DEPOSIT
        - GUIDED_PROFILE_FUNDS
        - HEALTH_INSURANCES
        - HIRE_PURCHASE
        - HOME_CONTENT_INSURANCES
        - HOME_INSURANCES
        - HR_SOLUTIONS
        - IDIN
        - IMPORT_COLLECTION
        - IMPORT_LETTER_OF_CREDIT
        - INCOME_AND_WEALTH_PLANNING
        - INDEPENDENT_ASSET_MANAGEMENT
        - INDIRECT_REAL_ESTATE
        - INSTALLMENT_FACILITY
        - INTERCOMPANY_PAYMENTS
        - INTEREST_ONLY_AFLOSSINGSVRIJ
        - INTEREST_ONLY_KREDIET
        - INTEREST_RATES
        - INTERNATIONAL_CORPORATE_COLLATERAL_ACCOUNTS
        - INTERNATIONAL_CORPORATE_CREDIT_ACCOUNTS
        - INTERNATIONAL_CORPORATE_PAYMENT_ACCOUNTS
        - INTERNATIONAL_DEPOSIT
        - INTERNATIONAL_DEPOSIT_ACCOUNTS
        - INTERNATIONAL_INVESTMENT_ACCOUNTS
        - INTERNATIONAL_PRIVATE_CREDIT_ACCOUNTS
        - INTERNATIONAL_PRIVATE_PAYMENT_ACCOUNTS
        - INTERNATIONAL_STANDARD_SAVINGS_ACCOUNTS
        - INTERNET_BANKING
        - INVENTORY_FINANCE
        - INVESTMENT_BELEGGERSREKENING
        - INVESTMENT_HYBRIDE
        - INVESTMENT_LEVEN
        - INVESTMENT_ADVICE
        - INVESTMENT_SAVING_ACCOUNTS
        - LEASE_COOPERATION_PROGRAMMES
        - LEGAL_ASSISTANCE_INSURANCES
        - LEGAL_SOLUTIONS
        - LEVEL_PAYMENT_MORTGAGES
        - LIABILITY_INSURANCES
        - LIFE_INSURANCE
        - LOMBARD_CREDITS
        - MARGIN_AND_COLLATERAL_FINANCING
        - MATCHMAKING
        - MEDICAL_PAYMENT_ACCOUNTS
        - MONEY_MARKETS
        - MORTGAGE_ADVICE
        - MORTGAGE_CONTINUITY_INSURANCES
        - MORTGAGE_EXECUTION
        - NETWORKING_SOLUTIONS
        - NON_REVOLVING_CUSTOMISED_LOANS
        - NON_REVOLVING_STANDARDISED_LOANS
        - NOTIONAL_POOLING
        - OF_BALANCE_SHEET_INSTRUMENTS
        - ONLINE_PAYMENT_SOLUTIONS
        - OTHER
        - OVERDRAFT_FACILITY
        - OVERDRAFTS
        - OVER_THE_COUNTER_PRODUCTS
        - PAYMENT_ALERTS
        - PSD_TWO_APIS
        - PENSION_INVESTMENT_ACCOUNTS
        - PENSION_PAY_OUT_ACCOUNTS
        - PENSION_SAVING_ACCOUNTS
        - PERSONAL_FINANCE_MANAGEMENT
        - PHILANTHROPY_ADVICE
        - PIN_SAVINGS
        - PORTFOLIO_ADVANCE_RATE
        - PRIVATE_EQUITY_ADVICE
        - PRODUCT_BASED_ADVICE
        - PUBLIC_SECTOR
        - RECEIVABLE_FINANCE
        - RECREATION_INSURANCES
        - REDEMPTION_ANUALITY
        - REDEMPTION_LINEAIR
        - REIMBURSEMENT_AUTHORISATIONS_RECEIVED
        - REPO_AND_REVERSE_REPO
        - RESIDENTIAL_REAL_ESTATE_LOANS
        - REVERSED_MORTGAGES_OPEET
        - REVOLVING_LOANS_BLOCKED_WITHDRAWAL
        - REVOLVING_STANDARDISED_LOANS
        - ROLLOVER_LOANS
        - SAFEKEEPING
        - SAFETY_DEPOSIT_BOX
        - SAVINGS_LOANS_SPAAR
        - SECURITIES_CLEARING
        - SECURITIES_FINANCE
        - SECURITIES_FINANCING
        - SECURITY_SOLUTIONS
        - SELF_DIRECTED
        - SELL_SIDE
        - SEPA
        - SERVICE_PRODUCTS
        - SETTLEMENTS
        - SPECIAL_FIXED_TERM_DEPOSIT
        - SPECIALIZED_CLEARING_SERVICES
        - SPECIFIC_FUNDING
        - STANDARD_FIXED_TERM_DEPOSIT
        - STANDARD_SAVINGS_ACCOUNTS
        - STAND_BY_SERVICE
        - STANDING_ORDERS
        - STATE_GUARANTEED_LOANS
        - STATEMENTS
        - STRATEGIC_ADVICES
        - STUDENT_INSURANCES
        - STUDENT_PAYMENT_ACCOUNTS
        - SUSTAINABILITY_SOLUTIONS
        - SUSTAINABLE_ADVICE
        - SWIFT
        - TARGET_BALANCING
        - TAX_RECLAIM
        - TERM_LIFE_INSURANCES
        - TERM_LOANS
        - TERMINAL_PAYMENT_SOLUTIONS
        - THIRD_PARTY_OFFERING
        - TIKKIE_CONSUMER
        - TRANSACTION_INITATION_APIS
        - TRANSFER_SERVICE
        - TRAVEL_SHORT_TERM_INSURANCES
        - TREASURY_TRANSACTIONS
        - TRIP_CANCELLATION_INSURANCES
        - URGENT_PAYMENTS
        - VALUABLES_INSURANCES
        - VEHICLE_INSURANCES
        - VMC_DPM_INCOME_MANDATES
        - WALLET
        - WEALTH_STRUCTURING
        - WEARABLE
        - WITHDRAWALS      
    ProductCommercialInfo:
      description: full commercial info about the product offering with the given ID
      type: object
      allOf:
        - $ref: '#/components/schemas/ProductBrief'
      properties:
        businessLines:
          description: |
            the business lines for which the product is available
          type: array
          minItems: 1
          maxItems: 5
          uniqueItems: true
          items:
            $ref: '#/components/schemas/BusinessLine'
          example:
          - RETAIL
          - MEES_PIERSON
        productCategories:
          description: |
            the list of level 1 categories where the product lies in the products tree
          type: array
          minItems: 1
          maxItems: 15
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ProductCategory'
          example: 
            - CREDITS
            - FINANCIAL_ADVICE
        productSubCategories:
          description: the list of level 2 categories (sub-categories) where the product lies
          type: array
          minItems: 1
          maxItems: 65
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ProductSubCategory'
          example: 
            - ADVICE_SERVICES
            - BANKING_AS_A_SERVICE
            - FINANCING_SERVICES
        productGroups:
          description: the list of logical groups that the current product is part of
          type: array
          minItems: 1
          maxItems: 250
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ProductGroup'
          example: 
            - ACTIVE_ADVICE
            - COMFORT_ADVICE
            - CUSTOMIZED_ADVICE
        usedInCountries:
          description: |
            the list of countries the product is sold and can be used; matching ISO-3166-1
            <br><a href="https://www.electoral-vote.com"><img border="0" src="https://w7.pngwing.com/pngs/208/635/png-transparent-map-europe-continent-countries-european-countries-chart-map-of-europe-european-map-digital-drawing-educational-thumbnail.png" alt="Click for www.electoral-vote.com" width="635" height="416" /></a>
          type: array
          example: 
            - NL
            - BE
            - LUX
          minItems: 1
          maxItems: 150
          items:
            type: string
            pattern: '^[A-Z]{2,3}$'
        termsAndConditions:
          description: the conditions bonding from the legal perspective once the product is bought by the customer
          type: array
          items:
            $ref: '#/components/schemas/Policy'
          minItems: 0
          maxItems: 350
        configuration:
          $ref: '#/components/schemas/Configuration'
        processingAttributes:
          $ref: '#/components/schemas/CommercialProcessingAttributes'
    CommercialProcessingAttributes:
      type: object
      required: 
        - signatureRequiredType
      properties:
        signatureRequiredType:
          description: |
            what kind of signature is expected from the customer if at all\
              - NONE = no signature is required, pushing the "next" or "confirm" button would suffice as proof that the customer wishes the product and accepts the terms & conditions
              - NON_REMOTE = a hand-signed official paper witnessed by a bank employee
              - REMOTE = a copy of a hand-signed official paper
              - DIGITAL = electronic signature with QR code or e-dentifier, facilitated by ABN or  via an approved electronic signature provider
          type: string
          enum:
            - NONE
            - NON_REMOTE
            - REMOTE
            - DIGITAL
        requestedDocuments:
          description:  |
            list of documents to be provided by the customer or actions to be performed by the customer and acknowledged by the financial institution \
              the OMS is responsible for making sure that the documents are provided or the steps are performed and the channels are responsible for facilitating the collection of the documents and the performing of the required steps
          type: array
          minItems: 1
          maxItems: 200
          items:
            type: object
            properties:
              documentItemId:
                description: the id of the item to be collected or step to be performed; used by OMS for corroborating between order and the items provided/perfomed
                type: string
                format: uuid
                example: "7d0113d1-6446-4227-9c02-ece3516bb7e9"
              documentItemName:
                description: the name of the requested document; a.k.a. the label to be shown to the customer
                type: string
                example: "copie d'une carte d'identité avec photo"
        isSalesSuspended:
          description:  |
            indicates if the product is to be sold or temporarily suspended
          type: boolean
          default:  false
          example:  true
    ProductImplementationBase:
      description: >-
        this is the minimum set of parameters for a base product to be instantiated; the correlation between the attributes set and enforcement of their split toward the correct base administration should be done in the Order Management System. \
          Here is just the definition of what has to be sent for a Product Offering, per instantiation administration. \
          Currently, most of the administrations are collecting the instantiation parameters from GRV tables. The 'fulfillmentConfigurationId' is the 'GRV-code'. Once the correct set of parameters is identified and agreed upon, the 'fulfillmentConfigurationId' will become obsolete and be replaced with the actual set of parameters, giving the flexibility to separate between various instantiation administrations.
      type: object
      required: 
        - "fulfillmentConfigurationId"
        - "fulfillmentAdministration"
      discriminator:
        propertyName: fulfillmentAdministration
        mapping:
          CRC:  '#/components/schemas/CoreBankingFulfillmentParameters'
          FRS:  '#/components/schemas/AccountingFulfillmentParameters'
          GT: '#/components/schemas/BillingFulfillmentParameters'
          RR: '#/components/schemas/InterestFulfillmentParameters'
          APA: '#/components/schemas/BundlingFulfillmentParameters'
          PIM:  '#/components/schemas/CashAndCardsFulfillmentParameters'
          LIM:  '#/components/schemas/LimitsFulfillmentParameters'
      properties:
        fulfillmentAdministration:
          description: |
            the backend adminsitration that implements a subset of financial services and isntantiate (a part of) an agreement
              - CRC = CoreBankingFulfillmentParameters
              - FRS = AccountingFulfillmentParameters
              - GT = BillingFulfillmentParameters
              - RR = InterestFulfillmentParameters
              - APA = BundlingFulfillmentParameters
              - PIM = CashAndCardsFulfillmentParameters
              - LIM = LimitsFulfillmentParameters
          type: string
          enum:
              - CRC
              - FRS
              - GT
              - RR
              - APA
              - PIM
              - LIM
          example: CRC
        fulfillmentConfigurationId:
          description: a minimal code needed by the fulfillment administration to be able to instantiate (a part of) an agreement
          type: string
          example: 42
        fulfilmentConfigurationItems:
          description: |
            the configuration items required by the current backend administration; in this place only the configuration item ids will be shown, not the full definition
          allOf:
            - $ref: '#/components/schemas/Configuration'
    AccountingFulfillmentParameters:
      description: all the parameters needed to instantiate the product in Financial Accounting System (FRS)
      allOf:
        - $ref: '#/components/schemas/ProductImplementationBase'
      example:
        fulfillmentAdministration: "Financial Accounting Registry (FRS)"
        fulfillmentConfigurationId: "42"
    BillingFulfillmentParameters:
      description: all the parameters needed to instantiate the product in Generiek Tariferen (GT). \
        
        Currently, GT is collecting the instantiated products from P&C and does not participate in the fulfillment process.
      allOf:
        - $ref: '#/components/schemas/ProductImplementationBase'
      properties:
        productId:
          description: good old plain product id from CRC/P&C, in six-digits-left-zero-padded-format; could be obsoleted in the future, in favour of 'price-plan id'
          type: string
          pattern: '\d{6}'
          example: '001249'
      example:
        fulfillmentAdministration: "Generiek Tariferen (RQR)"
        fulfillmentConfigurationId: "42"
        productId: "001290"
    InterestFulfillmentParameters:
      description: all the parameters needed to instantiate the product in Interest Calculation (RQR) \
        
        The minumum configuration item expected for most of the products in RQR would be the 'interest code'
      allOf:
        - $ref: '#/components/schemas/ProductImplementationBase'
      example:
        fulfillmentAdministration: "Interest Calculation (RQR)"
        fulfillmentConfigurationId: "42"
    BundlingFulfillmentParameters:
      description: all the parameters needed to instantiate the product in Interest Calculation (RQR) \
        
        The minumum configuration item expected for most of the products in APA would be the 'product bundle id\'
      allOf:
        - $ref: '#/components/schemas/ProductImplementationBase'
      properties:
        productBundleId:
          description: APA's internal bundle type id
          type: string
          pattern: '\d{4}'
          example: 1000
      example:
        fulfillmentAdministration: "Agreement Packaging Administration"
        fulfillmentConfigurationId: "42"
        productBundleId: 1000
    LimitsFulfillmentParameters:
      allOf:
        - $ref: '#/components/schemas/ProductImplementationBase'
      example:
        fulfillmentAdministration: "Limits"
        fulfillmentConfigurationId: "42"
    CashAndCardsFulfillmentParameters:
      allOf:
        - $ref: '#/components/schemas/ProductImplementationBase'
      example:
        fulfillmentAdministration: "Cash And Cards"
        fulfillmentConfigurationId: "42"
    CoreBankingFulfillmentParameters:
      allOf:
        - $ref: '#/components/schemas/ProductImplementationBase'
      example:
        fulfillmentAdministration: "Core Rekening Currant (CRC)"
        fulfillmentConfigurationId: "42"
    ProductFulfillmentParameters:
      type: array
      items:
        anyOf:
          - $ref: '#/components/schemas/AccountingFulfillmentParameters'
          - $ref: '#/components/schemas/BillingFulfillmentParameters'
          - $ref: '#/components/schemas/InterestFulfillmentParameters'
          - $ref: '#/components/schemas/BundlingFulfillmentParameters'
          - $ref: '#/components/schemas/LimitsFulfillmentParameters'
          - $ref: '#/components/schemas/CoreBankingFulfillmentParameters'
          - $ref: '#/components/schemas/CashAndCardsFulfillmentParameters'
    Policy:
      type: object
      required: 
        - "name"
      properties:
        name:
          description: an identifier of the policy; used by channels as a placeholder identifier
          type: string
          example: 'conditions.tariff'
        domain:
          description: attribute for grouping of terms and conditions per domain that they are addressing
          type: string
          enum: 
            - LEGAL
            - TARIFF
            - USAGE
            - GENERAL
          example: TARIFF
        brief:
          description: >-
            the text of the policy. while not limited in size this text could be only a summary of the policy and the full text could be attached as a document (see '#components/schemas/Policy/policyDocumentURL') 
          type: string
          example: |
            Betaalrekening:
              - Openingskosten  € 0
              - 1e betaalrekening*  € 2,95 per maand
              - Extra betaalrekening  € 1,40 per maand
              *Als u geen BasisPakket Betalen of Studenten Pakket heeft.
        policyDocumentURL:
          description: the full text of the policy as attached document; could be any media type; this is the translation of the official document into the 'policyLanguage'
          type: string
          example: 'https://developer-pr-iag.nl.eu.abnamro.com/rest-standards-and-guidelines/yaml-guidelines/#156'
        policyOfficialDocumentURL:
          description: the full text of the policy, in original language, as attached document; this is the official document, refered to in case of litigations
          example: 'https://confluence.int.abnamro.com/display/EIIE/Approved+Resources'
          type: string
    Configuration:
      description: a collection of configuration items that makes sense (can be addressed) together
      type: array
      items:
        $ref: '#/components/schemas/ConfigurationItem'
      minItems: 0
      maxItems: 150
      example: 
        - itemId: card.colour
          valueType: STRING
          defaultValue: RED
          allowedValues:
            - BLUE
            - GREEN
            - RED
          isMandatory: false
        - itemId: savings.rover_account
          valueType: CONTRACT
          isMandatory: true

    ConfigurationItem:
      description: a topic for which the customer have the option or is required to provide a value, it can be a date (e.g. predicted retirement date) or the IBAN of a rover account. Be advised, those configuration items are strictly related to the product definition and they are used for fulfillment or for offering realization, not necessarily related to user experience or order capture/processing flow
      type: object
      required:
        - itemId
      properties:
        itemId:
          description: the unique identifier within the catalogue of the configuration item
          type: string
          example: '54b00880-7516-4173-9aae-36c097a9e21b'
        itemLabel:
          description: the label (/question) to be shown to the customer
          type: string
          example: "Colour on the card"
        parentItemId:
          description: the id of the parent, useful in defining related configuration items
          type: string
          example: 'a01cac0a-f47e-4d8b-88f5-053a24be5a09'
        valueType:
          description: the type of the value; defines how to interpret the provided value; helps channels in defining the interaction with the user and implementing basic validations
          type: string
          default: STRING
          enum: 
            - STRING
            - DATE
            - NUMBER
            - INTEGER
            - CUSTOMER
            - CONTRACT
        allowedValues:
          description: a set of allowed values; all the allowed values must match the data type mentioned in the 'valueType'
          type: array
          minItems: 0
          maxItems: 200
          items:
            type: string
          example: 
            - NL
            - BE
            - LU
        defaultValue:
          description: |
            provides a value in case the user does not fill a value her/him-self; if a distinct set of values is allowed then the defualt value *must* be one of the values within the allowed set; its type must match the 'valueType'
          type: string
          example: BE
        isMandatory:
          description: |
            a flag indicating if the current configuration item requires to return a value for the current product; in other words if the configuration item is mandatory for the fulfillment or ordering process; if a default value is provided for the current configuration item we recommend to keep this as false
          type: boolean
          default: false
      example: 
        itemId: savings.rover_account
        valueType: CONTRACT
        isMandatory: true
    ConfigurationValues:
      description: a full set of concrete values chosen by the customer or by the process _for_ the customer
      type: array
      minItems: 1
      maxItems: 150
      items:
        $ref: '#/components/schemas/ConfigurationItemValue'
    ConfigurationItemValue:
      description: an instantiated configuration item with a concrete value
      required: 
        - itemId
      properties:
        itemId:
          description: the unique id of the configuration item
          type: string
          example: "09993d4a-e194-4c85-baf7-f67f8929669c"
        parentItemId:
          description: a mean to group configuration items. it could be a logical value for simple grouping or the id of another existing configuration item for creating a cascaded dependency.
        itemValue:
          description: the desired value for the configuration item, to be checked against the set of allowed values or other rules. the value should match the value type defined for the configuration item
          type: string
          example: "Mr. Injection"
tags:
  - name: offering
    description: Offering are products and services designed to deliver value to customers—either to fulfill their needs, satisfy their “wants,” or both. We discuss people's needs in other chapters. In this chapter, we discuss how marketing fills those needs through the creation and delivery of offerings.
    externalDocs:
      url: https://corporatefinanceinstitute.com/resources/management/products-and-services/
externalDocs:
  description: Please read more about the Daily Banking requirements and solution in Confluence
  url: https://confluence.int.abnamro.com/display/GT/Catalog+for+Commerce
